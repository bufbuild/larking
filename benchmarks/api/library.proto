// Copyright 2023 Edward McFarlane. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

package larking.benchmarks.librarypb;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option go_package = "larking.io/benchmarks/api/librarypb;librarypb";

service LibraryService {
  rpc GetBook(GetBookRequest) returns (Book) {
    option (google.api.http) = {
      get : "/v1/{name=shelves/*/books/*}"
    };
  };
  rpc CreateBook(CreateBookRequest) returns (Book) {
    option (google.api.http) = {
      post : "/v1/{parent=shelves/*}/books"
      body : "book"
    };
  };

  // Lists books in a shelf.
  rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {
    // List method maps to HTTP GET.
    option (google.api.http) = {
      // The `parent` captures the parent resource name, such as
      // "shelves/shelf1".
      get : "/v1/{parent=shelves/*}/books"
    };
  }

  // Updates a book.
  rpc UpdateBook(UpdateBookRequest) returns (Book) {
    // Update maps to HTTP PATCH. Resource name is mapped to a URL path.
    // Resource is contained in the HTTP request body.
    option (google.api.http) = {
      // Note the URL template variable which captures the resource name of the
      // book to update.
      patch : "/v1/{book.name=shelves/*/books/*}"
      body : "book"
    };
  }

  // Deletes a book.
  rpc DeleteBook(DeleteBookRequest) returns (google.protobuf.Empty) {
    // Delete maps to HTTP DELETE. Resource name maps to the URL path.
    // There is no request body.
    option (google.api.http) = {
      // Note the URL template variable capturing the multi-segment name of the
      // book resource to be deleted, such as "shelves/shelf1/books/book2"
      delete : "/v1/{name=shelves/*/books/*}"
    };
  }
}

message Book {
  // Resource name of the book. It must have the format of "shelves/*/books/*".
  // For example: "shelves/shelf1/books/book2".
  string name = 1;
  // The title of the book.
  string title = 2;
  // The author of the book.
  string author = 3;
  // The number of pages in the book.
  int32 page_count = 4;
  // The date the book was published.
  google.protobuf.Timestamp publish_time = 5;
  // The duration of the book.
  google.protobuf.Duration duration = 6;
  // The price of the book.
  google.protobuf.DoubleValue price = 7;
}

message GetBookRequest {
  // Resource name of a book. For example: "shelves/shelf1/books/book2".
  string name = 1;
}

message CreateBookRequest {
  // Resource name of the parent resource where to create the book.
  // For example: "shelves/shelf1".
  string parent = 1;
  // The Book resource to be created. Client must not set the `Book.name` field.
  Book book = 2;
}

message ListBooksRequest {
  // The parent resource name, for example, "shelves/shelf1".
  string parent = 1;

  // The maximum number of items to return.
  int32 page_size = 2;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

message ListBooksResponse {
  // The field name should match the noun "books" in the method name.  There
  // will be a maximum number of items returned based on the page_size field
  // in the request.
  repeated Book books = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}

message UpdateBookRequest {
  // The book resource which replaces the resource on the server.
  Book book = 1;

  // The update mask applies to the resource. For the `FieldMask` definition,
  // see
  // https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteBookRequest {
  // The resource name of the book to be deleted, for example:
  // "shelves/shelf1/books/book2"
  string name = 1;
}
