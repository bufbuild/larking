// Copyright 2022 Edward McFarlane. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

package larking.api.worker;

import "google/api/annotations.proto";
import "google/rpc/status.proto";

option go_package = "github.com/emcfarlane/larking/apipb/workerpb;workerpb";

message Command {
  string name = 1;
  oneof exec {
    string input = 2;
    string complete = 3;
    string format = 4;
  }
}

message Output {
  string output = 1; // printed output
  google.rpc.Status status = 2;
}

message Completion {
  repeated string completions = 3; // completions
}

message Result {
  oneof result {
    Output output = 1;
    Completion completion = 2;
  }
}

service Worker {
  rpc RunOnThread(stream Command) returns (stream Result) {
    option (google.api.http) = {
      custom : {kind : "websocket" path : "/v1/{name=threads/*}:run"}
      body : "*"
    };
  }
}
