// Copyright 2022 Edward McFarlane. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

package larking.api;

import "google/api/annotations.proto";
import "google/rpc/status.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

option go_package = "larking.io/api/actionpb;actionpb";

message LeafDialog {
  string type = 1;
  string name = 2;
  google.protobuf.Struct attributes = 3;
}

message ContainerDialog {
  string type = 1;
  string name = 2;
  google.protobuf.Struct attributes = 3;
  repeated ContainerDialog children = 4;
}

message Label { string name = 1; }

enum Kind {
  ANY = 0;
  LABEL = 1;
  BOOL = 2;
  INT = 3;
  FLOAT = 4;
  STRING = 5;
  BYTES = 6;
  LIST = 7;
  DICT = 8;
  MESSAGE = 9;
}

message KindType {
  Kind kind = 1;         // base type
  Kind key_kind = 2;     // dict key
  Kind val_kind = 3;     // dict or list values
  string msg_string = 4; // message
}

message Attr {
  KindType type = 1;
  // google.protobuf.Any default = 2;
  bool optional = 3;
  string doc = 4;
}

message Kwarg {
  string field = 1;
  google.protobuf.Any value = 2;
}

message AttrValue {
  Attr attr = 1;
  google.protobuf.Any value = 2;
}

message Action {
  string name = 1;
  repeated Action deps = 2;
  string rule_module = 3;
  string rule_name = 4;

  repeated AttrValue values = 5;
  google.rpc.Status status = 6;
  bool failed = 7;
  google.protobuf.Timestamp ready_time = 8;
  google.protobuf.Timestamp done_time = 9;
}

message FilesInfo {
  repeated string files = 1;
  bool executable = 2;
}

message ContainerInfo {
  string src = 1;
  string reference = 2;
}

// service Tooling {
//   rpc GetResource(GetResourceRequest) returns (Resource) {
//     option (google.api.http) = {
//       get : "/v1/tooling/{name=**}"
//     };
//   }
//
//   rpc UpdateResource(UpdateResourceRequest) returns (Resource) {
//     option (google.api.http) = {
//       post : "/v1/tooling/{name=**}"
//       body : "*"
//     };
//   }
// }
//
// message Resource {
//   // The resource name.
//   string name = 1;
//   google.protobuf.Timestamp created_at = 2;
//   google.protobuf.Timestamp updated_at = 3;
//
//   oneof data {
//     string text = 1;
//     int64 int = 2;
//     float float = 3;
//     bytes bytes = 4;
//
//     Section section = 5;
//     Table table = 6;
//     Image image = 7;
//   }
// }
//
// message Section {
//   string title = 1;
//   string sub_title = 2;
//   Resource resource = 3;
// }
//
//// PageInfo provides pagination support.
//// See graphql relay for details.
// message PageInfo {
//   bool has_next_page = 1;
//   bool has_prev_page = 2;
//   bytes start_cursor = 2;
//   bytes end_cursor = 2;
// }
//
// message TableHead { repeated Resource head = 1; }
// message TableRow { repeated Resource data = 1; }
//
// message Table {
//
//   TableHead head = 1;
//   repeated TableRow rows = 2;
//
//   // pagination
//   PageInfo page_info = 3;
// }
//
// message Column { repeated Resource column = 1; }
//
// message Image {
//   string source = 1;
//   string alt = 2;
// }
