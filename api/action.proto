// Copyright 2022 Edward McFarlane. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

package larking.api;

import "google/api/annotations.proto";
import "google/rpc/status.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

option go_package = "larking.io/api/actionpb;actionpb";

// message Dialog {
//   string type = 1;
//   google.protobuf.Struct attributes = 2;
//   repeated Dialog children = 3;
//   Value value = 4;
// }

message LabelValue { string value = 1; }

// enum Kind {
//   ANY = 0;
//   LABEL = 1;
//   BOOL = 2;
//   INT = 3;
//   FLOAT = 4;
//   STRING = 5;
//   BYTES = 6;
//   LIST = 7;
//   DICT = 8;
//   MESSAGE = 9;
// }

// message KindType {
//   Kind kind = 1;         // base type
//   Kind key_kind = 2;     // dict key
//   Kind val_kind = 3;     // dict or list values
//   string msg_string = 4; // message
// }
//
// message Value {
//   oneof kind {
//     string label_value = 1;
//     bool bool_value = 2;
//     int64 int_value = 3;
//     double float_value = 4;
//     string string_value = 5;
//     bytes bytes_value = 6;
//     ListValue list_value = 7;
//     DictValue dict_value = 8;
//     google.protobuf.Any message = 9;
//   }
// }
//
// message ListValue { repeated Value values = 1; }
// message DictValue { repeated Value pairs = 2; }

message ListValue { repeated google.protobuf.Any items = 1; }
message EntryValue {
  google.protobuf.Any key = 1;
  google.protobuf.Any value = 2;
}
message DictValue { repeated EntryValue entries = 1; }

message Attr {
  // KindType type = 1;
  string type = 1; // message type
  bool optional = 2;
  string doc = 3;
}

message Rule {
  string name = 1; // file://path/to/module.star:identifier ??
  // string module = 2;
  string doc = 3;
  map<string, Attr> attrs = 4;
  repeated Attr provides = 5;
}

message Target {
  string name = 1;
  string rule_name = 2;
  // string rule_module = 3;
  map<string, google.protobuf.Any> kwargs = 4;
}

message Action {
  Target target = 1;
  repeated Action deps = 2;

  repeated google.protobuf.Any values = 5;
  google.rpc.Status status = 6;
  bool failed = 7;
  google.protobuf.Timestamp ready_time = 8;
  google.protobuf.Timestamp done_time = 9;
}

message FilesInfo {
  repeated string files = 1;
  string executable = 2;
}

message ContainerInfo {
  string src = 1;
  string reference = 2;
}

message Row { repeated google.protobuf.Any values = 1; }

message SQLQueryInfo {
  repeated string columns = 1;
  repeated Row rows = 2;
}

message SQLQueryRowInfo {
  repeated string columns = 1;
  Row row = 2;
}

message RunInfo {
  string std_out = 1;
  string std_err = 2;
  int32 exit_code = 3;
}
